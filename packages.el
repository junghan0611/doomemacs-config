;; -*- no-byte-compile: t; -*-
;;; $DOOMDIR/packages.el

;; DO NOT EDIT THIS FILE DIRECTLY
;; This is a file generated from a literate programing source file located at
;; https://gitlab.com/zzamboni/dot-doom/-/blob/master/doom.org
;; You should make any changes there and regenerate it from Emacs org-mode
;; using org-babel-tangle (C-c C-v t)

;; To install a package with Doom you must declare them here and run 'doom sync'
;; on the command line, then restart Emacs for the changes to take effect -- or
;; use 'M-x doom/reload'.

;; To install SOME-PACKAGE from MELPA, ELPA or emacsmirror:
;;(package! some-package)

;; To install a package directly from a remote git repo, you must specify a
;; `:recipe'. You'll find documentation on what `:recipe' accepts here:
;; https://github.com/raxod502/straight.el#the-recipe-format
;;(package! another-package
;;  :recipe (:host github :repo "username/repo"))

;; If the package you are trying to install does not contain a PACKAGENAME.el
;; file, or is located in a subdirectory of the repo, you'll need to specify
;; `:files' in the `:recipe':
;;(package! this-package
;;  :recipe (:host github :repo "username/repo"
;;           :files ("some-file.el" "src/lisp/*.el")))

;; If you'd like to disable a package included with Doom, you can do so here
;; with the `:disable' property:
;;(package! builtin-package :disable t)

;; You can override the recipe of a built in package without having to specify
;; all the properties for `:recipe'. These will inherit the rest of its recipe
;; from Doom or MELPA/ELPA/Emacsmirror:
;;(package! builtin-package :recipe (:nonrecursive t))
;;(package! builtin-package-2 :recipe (:repo "myfork/package"))

;; Specify a `:branch' to install a package from a particular branch or tag.
;; This is required for some packages whose default branch isn't 'master' (which
;; our package manager can't deal with; see raxod502/straight.el#279)
;;(package! builtin-package :recipe (:branch "develop"))

;; Use `:pin' to specify a particular commit to install.
;;(package! builtin-package :pin "1a2b3c4d5e")

;; Doom's packages are pinned to a specific commit and updated from release to
;; release. The `unpin!' macro allows you to unpin single packages...
;;(unpin! pinned-package)
;; ...or multiple packages
;;(unpin! pinned-package another-pinned-package)
;; ...Or *all* packages (NOT RECOMMENDED; will likely break things)
;;(unpin! t)

;;; doom-disabled-packages

(package! demangle-mode :disable t)
(package! cuda-mode :disable t)
(package! opencl-mode :disable t)

(package! diredfl :disable t) ; conflict @denote
(package! dirvish :disable t)
(package! code-review :disable t) ; not working

;; checkers
(package! flyspell-lazy :disable t)
(package! flymake-popon :disable t)
(package! flycheck-popup-tip :disable t) ; conflict
(package! flycheck-plantuml :disable t)
(package! flycheck :disable t)
(package! lsp-mode :disable t) ; use eglot

(package! nose :disable t) ; python module
(package! lsp-python-ms :disable t)

(package! vundo :disable t)
(package! undo-fu-session :disable t)
(package! elfeed-goodies :disable t)
(package! solaire-mode :disable t)
;; (package! ace-window :disable t)

(package! treemacs-nerd-icons :disable t)

;; (package! corfu-popupinfo :disable t)

(package! evil-snipe :disable t)
(package! evil-goggles :disable t)
;; (package! evil-mc :disable t)

(package! evil-terminal-cursor-changer :disable t) ; conflict on kitty
;; (package! kkp :disable t) ; conflict on term-keys

;;; additional packages

(package! denote)
(package! denote-org)

(package! denote-silo)
(package! denote-sequence)
(package! denote-markdown)

(package! denote-explore :recipe (:host github :repo "pprevos/denote-explore"))

(package! denote-search)
(package! denote-regexp)
(package! citar-denote)

;; (package! consult-notes)

(unpin! doom-themes)
(package! doom-themes :recipe (:host github :repo "junghan0611/doom-themes" :branch "ko"))
(package! outli :recipe (:host github :repo "jdtsmith/outli" :files ("*.el")))

(package! tempel)
(package! tempel-collection)
(package! imenu-list :recipe (:host github :repo "junghan0611/imenu-list" :branch "master"))

;; (package! org-glossary :recipe (:host github :repo "tecosaur/org-glossary" :files ("*.el" "*.org" "*.texi")))
;; (package! ten :recipe (:host sourcehut :repo "nobiot/ten")) ;; https://git.sr.ht/~nobiot/ten
(package! aggressive-indent)
(package! dired-preview)
(package! jinx) ; spell checker

(package! clipetty) ; osc52 support

(package! password-store-menu)

(package! casual)

;;;; AI AGENT

;;;;; ClaudeCode

;; Option 1
(package! claude-code :recipe (:host github :repo "stevemolitor/claude-code.el" ))
(unless IS-TERMUX
  (package! monet :recipe (:host github :repo "stevemolitor/monet" )))

;; Option 2
(package! claude-code-ide :recipe (:host github :repo "manzaltu/claude-code-ide.el" ))

;;;;; ACP (Agent Client Protocol)

(package! shell-maker)
(package! acp :recipe (:host github :repo "xenodium/acp.el"))
(package! agent-shell :recipe (:host github :repo "xenodium/agent-shell"))
